env:
  global:
    - ARTIFACTS_AWS_REGION=us-east-1
    - ARTIFACTS_S3_BUCKET=matplotlib-test-results
    - secure: RgJI7BBL8aX5FTOQe7xiXqWHMxWokd6GNUWp1NUV2mRLXPb9dI0RXqZt3UJwKTAzf1z/OtlHDmEkBoTVK81E9iUxK5npwyyjhJ8yTJmwfQtQF2n51Q1Ww9p+XSLORrOzZc7kAo6Kw6FIXN1pfctgYq2bQkrwJPRx/oPR8f6hcbY=
    - secure: E7OCdqhZ+PlwJcn+Hd6ns9TDJgEUXiUNEI0wu7xjxB2vBRRIKtZMbuaZjd+iKDqCKuVOJKu0ClBUYxmgmpLicTwi34CfTUYt6D4uhrU+8hBBOn1iiK51cl/aBvlUUrqaRLVhukNEBGZcyqAjXSA/Qsnp2iELEmAfOUa92ZYo1sk=
    - BUILD_DOCS=false
    - TEST_ARGS=--no-pep8
    - NUMPY_VERSION=1.9

language: python

matrix:
  include:
    - python: 2.6
      env: NUMPY_VERSION=1.6
    - python: 2.7
    - python: 3.3
    - python: 3.4
    - python: 2.7
      env: TEST_ARGS=--pep8
    - python: 2.7
      env: BUILD_DOCS=true

before_install:
  # Download and install conda
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=/home/travis/miniconda/bin:$PATH
  - conda update --yes conda


install:
  # Set up Conda environment
  - conda create --yes -n test python=$TRAVIS_PYTHON_VERSION
  - source activate test

  # Install core Python dependencies using conda
  - conda install --yes nose dateutil numpy=$NUMPY_VERSION pep8 pyparsing pillow

  # Install some non-Python dependencies through apt-get
  - sudo apt-get update
  - sudo apt-get -qq install inkscape libav-tools
  # We use --no-install-recommends to avoid pulling in additional large latex docs that we don't need
  - |
    if [[ $BUILD_DOCS == true ]]; then
        sudo apt-get install -qq --no-install-recommends dvipng texlive-latex-base texlive-latex-extra texlive-fonts-recommended graphviz;
        conda install sphinx numpydoc;
        pip install linkchecker;
    fi

  # Now, install matplotlib
  - python setup.py install

script:
  # The number of processes is hardcoded, because using too many causes the
  # Travis VM to run out of memory (since so many copies of inkscape and
  # ghostscript are running at the same time).
  - echo Testing using 8 processes
  # Generate the font caches in a single process before starting the
  # multiple processes
  - python -c "from matplotlib import font_manager"
  - |
    if [[ $BUILD_DOCS == false ]]; then
       mkdir ../tmp_test_dir;
       cd ../tmp_test_dir;
       python ../matplotlib/tests.py -sv --processes=8 --process-timeout=300 $TEST_ARGS;
    else
        cd doc; python make.py html --small;
        # We don't build the LaTeX docs here, so linkchecker will complain
        touch build/html/Matplotlib.pdf;
        linkchecker build/html/index.html;
    fi

after_failure:
  - |
    if [[ $TRAVIS_PULL_REQUEST == false ]]; then
       tar cjf result_images.tar.bz2 result_images;
       gem install travis-artifacts; fi
       travis-artifacts upload --path result_images.tar.bz2;
       echo https://s3.amazonaws.com/matplotlib-test-results/artifacts/${TRAVIS_BUILD_NUMBER}/${TRAVIS_JOB_NUMBER}/result_images.tar.bz2;
    else
        echo "The result images will only be uploaded if they are on the matplotlib/matplotlib repo - this is for security reasons to prevent arbitrary PRs echoing security details."
    fi
